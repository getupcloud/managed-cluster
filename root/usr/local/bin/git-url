#!/usr/bin/env python3

from giturlparse import parse
import sys
import os

if os.path.exists(sys.argv[1]) or sys.argv[1].startswith(".") or sys.argv[1].startswith("/"):
    if len(sys.argv) > 1:
        sys.exit(0)
    print(sys.argv[1])
    sys.exit(0)

def exit_fail(msgs=[]):
    # user|branch|domain|groups_path|owner|path|path_raw|pathname|platform|port|protocol|protocols|repo|url
    attrs = 'user|host|port|owner|groups|repo|path|protocol|branch|url|url2ssh'
    msgs = msgs if msgs else [
        f'Usage: {sys.argv[0]} GIT-URL [{attrs}]',
        'See https://github.com/nephila/giturlparse for detail'
    ]
    for m in msgs:
        print(m, file=sys.stderr)
    sys.exit(1)

try:
    url, attr = sys.argv[1:3]
except ValueError:
    exit_fail()

if attr == 'groups':
    attr = 'groups_path'

if attr in ['path', 'path_raw']:
    attr = 'pathname'

p = parse(url)

try:
    value = getattr(p, attr)
except AttributeError:
    exit_fail([f'Invalid parameter: {attr}'])

if attr in ['host', 'domain']:
    if '/' in value:
        value = value[:value.index('/')]
    if ':' in value:
        value = value[:value.index(':')]

if attr == 'port' and not value:
    proto = getattr(p, 'protocol')
    if proto == 'ssh':
        value = '22'
    elif proto == 'http':
        value = '80'
    elif proto == 'https':
        value = '443'

print(value)
