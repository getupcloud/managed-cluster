#!/usr/bin/env bash

set -eu

if ${INSIDE_CONTAINER:-false}; then
    source /etc/profile.d/getup.sh
else
    source $REPO_DIR/root/etc/profile.d/getup.sh
fi
source repo-git-config-setup

opt_force=
force=false
while [ $# -gt 0 ]; do
    case "$1" in
        -f|--force)
            force=true
            opt_force=$1
    esac
    shift
done

info Switching to $REPO_DIR
cd $REPO_DIR

origin=$(git remote get-url origin)

if [ "$origin" == https://github.com/getupcloud/managed-cluster.git ] \
   || [ "$origin" == git@github.com:getupcloud/managed-cluster.git ]; then

  warn Refusing to push code to upstream repository: $origin
  warn Execute \`managed-cluster setup-remote\` and try again.
  warn Current remotes:
  git remote -v
  exit 1
fi

git_provider=$(git-provider $origin)

if [ "$git_provider" == github ]; then
  if ! repo-exists-github; then
      if $force; then
          repo-setup-github $opt_force
      else
          ask_execute_command repo-setup-github
      fi
  fi
fi

if ${INSIDE_CONTAINER:-false}; then
    repo-validate $opt_force
    REPO_FILES="repo.conf clusters/$cluster_name/$cluster_type"
    COMMIT_MESSAGE="Automatic commit: clusters/$cluster_name/$cluster_type"
else
    REPO_FILES="repo.conf identity identity.pub known_hosts"
    COMMIT_MESSAGE="Automatic commit: repo/$customer_name"
fi

if $force; then
    git add ${REPO_FILES}
    git commit -m "$COMMIT_MESSAGE"
elif ask "Select files to commit now? [Y/n]"; then
    FZF_PREVIEW="
        if [ '{1}' = '??' ]; then
            [ -d {2} ] && tree {2} || cat {2}
        else
            git diff --color {2}
        fi
    "

    FILES_TO_COMMIT=(
        $(git status --short $REPO_FILES | fzf -0 --ansi --reverse --multi --disabled \
            --header='---[ Select files to commit (ctrl+a to select all) ]---' \
            --preview "$FZF_PREVIEW" \
            --bind 'ctrl-a:select-all' \
            | awk '{print $2}'
        )
    )

    if [ ${#FILES_TO_COMMIT[*]} -eq 0 ]; then
        if ! ask "Nothing to commit. Continue anyway? [y/N]"; then
            exit 0
        fi
    else
        echo
        info Commiting files:
        printf '+ %s\n' "${FILES_TO_COMMIT[@]}"
        git add "${FILES_TO_COMMIT[@]}"
        git commit "${FILES_TO_COMMIT[@]}" -m "$COMMIT_MESSAGE"
    fi
fi

if $force; then
    git push origin main
else
    ask_execute_command git push origin main
fi
