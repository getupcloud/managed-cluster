#!/usr/bin/env bash

export ENTRYPOINT=$0
source /etc/profile.d/getup.sh
source /pyenv/bin/activate

update_ca_certificates
run_as_user "$@"

if ! [ -d "${KUBECONFIG%/*}" ]; then
    mkdir -p "${KUBECONFIG%/*}"
fi

if [ -n "$GH_TOKEN" ]; then
    gh auth login --with-token <<<$GH_TOKEN
fi

if [ "$cluster_type" == standalone ] || [ -z "$cluster_type" ]; then
    info Entering standalone mode
    export customer_name=${customer_name:-standalone}
    export cluster_type=${cluster_type:-standalone}
    export cluster_name=${cluster_name:-standalone}

    for env in $REPO_DIR/templates/*/provider.env; do
        #info Sourcing $env
        source_env $env
    done
fi

if is_local_git_repo && ! grep -q "Host git.flux-system.svc.cluster.local" ~/.ssh/config; then
    export HOST_IP=${HOST_IP:-$(get_host_ip 2>/dev/null)}
    cat >>~/.ssh/config <<-EOF
		
		Host git.flux-system.svc.cluster.local
		     Hostname ${HOST_IP}
		     Port 2222
		     UserKnownHostsFile /dev/null
		     CheckHostIP no
		     StrictHostKeyChecking no
	EOF
fi

if [ $# -eq 0 ] ; then
    if [ -e $CLUSTER_DIR/main.tf ] && ! [ -r "$TF_VARS_FILE" ]; then
        debug Terraform variables file not found: $TF_VARS_FILE
        ask_execute_command /usr/local/bin/terraform-setup
    fi

    exec /bin/bash
else
   exec /bin/bash -c "$*"
fi
